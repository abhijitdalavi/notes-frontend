{"version":3,"sources":["components/Note.js","components/Notes.js","components/Textbox.js","components/Dashboard.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Note","props","useState","title","noteTitle","setNoteTitle","description","noteDescription","setNoteDescription","isHidden","setIsHidden","isSaving","setIsSaving","modalTitle","setModalTitle","modalDescription","setModalDescription","deleteNote","_id","e","stopPropagation","fetch","method","headers","Accept","mode","then","window","location","reload","catch","err","updateNote","body","JSON","stringify","className","onClick","src","process","alt","rows","spellCheck","placeholder","defaultValue","onChange","target","value","Notes","notes","setNotes","fetchingNotes","setFetchingNotes","url","user","googleId","useEffect","response","console","log","status","json","Error","responseJson","reverse","map","note","i","key","Textbox","setTitle","setDescription","type","submitNote","Dashboard","isLoading","isSignedIn","href","picture","name","App","setIsSignedIn","setUser","setIsLoading","credentials","success","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7e91250d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './Note.css'\r\n\r\nexport default function Note(props){\r\n    const [noteTitle, setNoteTitle] = useState(props.title)\r\n    const [noteDescription, setNoteDescription] = useState(props.description)\r\n    const [isHidden, setIsHidden] = useState(true)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [modalTitle, setModalTitle] = useState(props.title)\r\n    const [modalDescription, setModalDescription] = useState(props.description)\r\n\r\n    function insideModalOnClick(e) {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    function deleteNote(_id,e){\r\n        e.stopPropagation()\r\n        fetch(`http://localhost:5000/notes/${_id}`,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\":true\r\n                },\r\n                mode: \"cors\"\r\n            })\r\n            .then(()=>{\r\n                window.location.reload()\r\n            })\r\n            .catch(err => {\r\n                throw(err)\r\n            });\r\n    }\r\n    \r\n    function updateNote(_id,title,description) {\r\n        setIsSaving(true)\r\n        fetch(`http://localhost:5000/notes/update/${_id}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Origin\":true\r\n                },\r\n                body: JSON.stringify({\r\n                    title: title,\r\n                    description: description\r\n                })\r\n            })\r\n            .then(()=>{\r\n                setNoteTitle(title)\r\n                setNoteDescription(description)\r\n                setIsSaving(false)\r\n            })\r\n            .catch(err => {\r\n                setIsSaving(false)\r\n                throw(err)\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div className='Note-Modal'>\r\n            <div className='Note' onClick={()=>setIsHidden(false)}> \r\n                <div className='Note-Title'>{noteTitle}</div>\r\n                <div className='Note-Description'>{noteDescription}</div>\r\n                <div className='Note-DeleteSection'>\r\n                    <img src={process.env.PUBLIC_URL+'/edit.png'} alt='edit'/>\r\n                    <img src={process.env.PUBLIC_URL+'/delete.png'} alt='delete' onClick={(e)=>deleteNote(props._id,e)}/>\r\n                </div>\r\n            </div>\r\n            {!isHidden && (\r\n                <div className='Modal' onClick={()=>setIsHidden(true)}>\r\n                    <div className='Modal-Content' onClick={insideModalOnClick}>\r\n                        <div className='Save-Section'>\r\n                            {isSaving ? (\r\n                                <div className='Modal-Save-Text'>Saving...</div>\r\n                            ) : (\r\n                                <div className='Modal-Save-Text'>All changes saved âœ“</div>\r\n                            ) }\r\n                        </div>\r\n                        <textarea rows='1' className='Modal-Title' spellCheck='false' placeholder='Title' defaultValue={noteTitle} onChange={e => {\r\n                            setModalTitle(e.target.value)\r\n                            updateNote(props._id,e.target.value,modalDescription)\r\n                        }}/>\r\n                        <textarea rows='8' className='Modal-Description' spellCheck='false' placeholder='Take a note...' defaultValue={noteDescription} onChange={e => {\r\n                            setModalDescription(e.target.value)\r\n                            updateNote(props._id,modalTitle,e.target.value)\r\n                        }}/>\r\n                        <div className='Modal-Close'>\r\n                            <div className='Modal-Close-Text' onClick={()=>setIsHidden(true)}>Close</div>\r\n                            <div className='Modal-Delete' onClick={(e)=>deleteNote(props._id,e)}>Delete</div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './Notes.css'\r\nimport Note from './Note'\r\n\r\nexport default function Notes(props){\r\n    const [notes,setNotes] = useState([]);\r\n    const [fetchingNotes, setFetchingNotes] = useState(true)\r\n    var url = 'http://localhost:5000/notes/'+props.user.googleId;\r\n    useEffect(()=>{\r\n        setFetchingNotes(true)\r\n        fetch(url,\r\n        {\r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              \"Access-Control-Allow-Origin\":true\r\n            }\r\n            // mode: 'cors'\r\n        })\r\n        .then(response => {\r\n            console.log(\"notes request received\")\r\n            if (response.status === 200){\r\n                return response.json()\r\n            }\r\n            throw new Error(\"failed to load notes\");\r\n          })\r\n          .then(responseJson => {\r\n            setNotes(responseJson.reverse())\r\n            setFetchingNotes(false)\r\n          })\r\n          .catch(err => {\r\n            setFetchingNotes(false)\r\n            throw(err)\r\n          });\r\n        },\r\n        [url]\r\n    )\r\n    return fetchingNotes ? (\r\n        <div className='Notes-Container'>\r\n            <img src={process.env.PUBLIC_URL+'/loading.svg'} alt='Loading'/>\r\n        </div>\r\n    ) :\r\n    (\r\n        <div className='Notes-Container'>\r\n            {notes.map((note,i)=>\r\n                <Note key={i} {...note} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport './Textbox.css'\r\n\r\nexport default function Textbox(props){\r\n    const [title,setTitle] = useState('')\r\n    const [description,setDescription] = useState('')\r\n\r\n    return(\r\n        <div className='Container'>\r\n            <input className='Title' type='text' spellCheck='false' placeholder='Title' onChange={e => setTitle(e.target.value)}/>\r\n            <textarea className='Description' type='text' spellCheck='false' placeholder='Take a note...' onChange={e => setDescription(e.target.value)}/>\r\n            {title || description ? (\r\n                <div className='Submit' onClick={()=>{\r\n                    submitNote(props.user.googleId,title,description)\r\n                }}>Add Note</div>\r\n            ) : (\r\n                <div className='Submit-Null'>Add Note</div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction submitNote(googleId,title,description){\r\n        fetch(\"http://localhost:5000/notes/add\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\":true\r\n            },\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\r\n                googleId: googleId,\r\n                title: title,\r\n                description: description\r\n            })\r\n        })\r\n        .then(()=>{\r\n            window.location.reload()\r\n        })\r\n        .catch(err => {\r\n            throw(err)\r\n        });\r\n}","import React from \"react\";\r\nimport './Dashboard.css';\r\nimport Notes from  './Notes'\r\nimport Textbox from \"./Textbox\";\r\n\r\nexport default function Dashboard(props){\r\n    if (props.isLoading) return (\r\n        <div className='LoadingDashboard'>\r\n            <img src={process.env.PUBLIC_URL+'/loading.svg'} alt='Loading'/>\r\n        </div>\r\n    )\r\n    else if (props.isSignedIn===false) return (\r\n        <div className='NotSignedInDashboard'>\r\n            <div className='Notes-Head'>\r\n                <img className='Notes-Logo' src={process.env.PUBLIC_URL + '/favicon.ico'} alt='Icon'/>\r\n                <div className='Notes-Head-Text'>NOTES</div>\r\n            </div>\r\n            \r\n            <div className='Typewriter'>\r\n                <div>The simplest way</div>\r\n                <div>to keep notes ...</div>\r\n            </div>\r\n            <div className=\"Google-Btn\" onClick={()=>window.location.href='http://localhost:5000/auth/google'}>\r\n                <img className=\"Google-Icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt='google'/>\r\n                <div className=\"Btn-Text\">Sign in with Google</div>\r\n            </div>\r\n        </div>\r\n    )\r\n    else if(props.isSignedIn) return(   \r\n        <div className=\"Dashboard\">\r\n            <Textbox {...props} />\r\n            <Notes {...props} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport './Header.css';\r\n\r\nexport default function(props){\r\n    return props.isSignedIn ? (\r\n        <div className=\"Header\">\r\n            <div className='Dropdown'>\r\n                <img className='UserImage' src={props.user.picture} alt='User'/>\r\n                <div className='DropdownContent'>\r\n                    <div className='Username'>{props.user.name}</div>\r\n                    <a href=\"http://localhost:5000/auth/logout\">Logout</a>\r\n                </div>\r\n            </div>\r\n            <div className='Header-Flex'>\r\n                <img src={process.env.PUBLIC_URL + '/favicon.ico'} alt='Notes-Logo'/>\r\n                <div className='Heading'>Notes</div>\r\n            </div>\r\n        </div>\r\n    ) :\r\n    (\r\n        <div className=\"Header\">\r\n            <div className='SignIn-Button' onClick={()=>window.location.href='http://localhost:5000/auth/google'}>Sign In</div>\r\n            <div className='Header-Flex'>\r\n                <img src={process.env.PUBLIC_URL + '/favicon.ico'} alt='Notes-Logo'/>\r\n                <div className='Heading'>Notes</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dashboard from \"./components/Dashboard\"\r\nimport Header from \"./components/Header\";\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [isSignedIn,setIsSignedIn] = useState(false)\r\n  const [user,setUser] = useState({})\r\n  const [isLoading,setIsLoading] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    setIsLoading(true)\r\n    fetch(\"http://localhost:5000/auth/login/success\",\r\n      {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Credentials\": true,\r\n          \"Access-Control-Allow-Origin\":true\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(\"login request received\")\r\n        if (response.success === false) {\r\n          return false\r\n        }\r\n        else if (response.status === 200) return response.json();\r\n        throw new Error(\"failed to authenticate user\");\r\n      })\r\n      .then(responseJson => {\r\n        if(responseJson.success===false){\r\n          setIsSignedIn(false)\r\n          setIsLoading(false)\r\n        }\r\n        else{\r\n          setUser(responseJson.user)\r\n          setIsSignedIn(true)\r\n          setIsLoading(false)\r\n        }\r\n        \r\n      })\r\n      .catch(err => {\r\n        setIsSignedIn(false)\r\n        setIsLoading(false)\r\n        throw(err)\r\n      });\r\n  }, \r\n  []\r\n  )\r\n\r\n  const props = {\r\n    user: user,\r\n    isSignedIn: isSignedIn,\r\n    isLoading: isLoading\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header {...props} />\r\n      <Dashboard {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}